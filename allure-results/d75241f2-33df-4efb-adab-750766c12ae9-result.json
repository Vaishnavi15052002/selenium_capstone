{"name": "test_add_to_cart[firefox]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "browser_name = 'firefox'\n\n    @pytest.mark.parametrize(\"browser_name\", [\"chrome\", \"edge\", \"firefox\"])\n    def test_add_to_cart(browser_name):\n        driver = DriverFactory.get_driver(browser_name=browser_name, headless=False)\n        wait = WebDriverWait(driver, 10)\n    \n        driver.get(\"https://www.demoblaze.com/\")\n    \n        # Click on Samsung Galaxy S6\n        wait.until(EC.element_to_be_clickable((By.LINK_TEXT, \"Samsung galaxy s6\"))).click()\n    \n        # Click 'Add to cart'\n        wait.until(EC.element_to_be_clickable((By.LINK_TEXT, \"Add to cart\"))).click()\n    \n        # Handle alert\n        alert = wait.until(EC.alert_is_present())\n        alert.accept()\n    \n        # Go to cart\n        wait.until(EC.element_to_be_clickable((By.ID, \"cartur\"))).click()\n    \n        # Verify item in cart\n>       product = wait.until(EC.visibility_of_element_located((By.XPATH, \"//td[contains(text(),'Samsung galaxy s6')]\")))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_add_to_cart.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0a8de9a9-6c35-4f14-949e-7b29ec9bce30\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000025C6C4CE700>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "parameters": [{"name": "browser_name", "value": "'firefox'"}], "start": 1761121984877, "stop": 1761122009317, "uuid": "42510e9b-7082-41d2-bee4-769c3c0de84b", "historyId": "522049877b6d008f37469e66c9e3f134", "testCaseId": "a65fce4e70cb5afd8c0f8bcce4c3e27a", "fullName": "tests.test_add_to_cart#test_add_to_cart", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_to_cart"}, {"name": "host", "value": "ASCENDI-1GUJSNA"}, {"name": "thread", "value": "15648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_to_cart"}], "titlePath": ["tests", "test_add_to_cart.py"]}