{"uid":"303e050ab52dded5","name":"test_file_upload[chrome]","fullName":"tests.test_file_upload#test_file_upload","historyId":"7bf623483a556eebc3f486be0a9f1ad8","time":{"start":1761122519008,"stop":1761122543453,"duration":24445},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=141.0.7390.108)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6f175e8e5+80021]\n\tGetHandleVerifier [0x0x7ff6f175e940+80112]\n\t(No symbol) [0x0x7ff6f14e060f]\n\t(No symbol) [0x0x7ff6f14b82f1]\n\t(No symbol) [0x0x7ff6f15688be]\n\t(No symbol) [0x0x7ff6f1588fa2]\n\t(No symbol) [0x0x7ff6f1561003]\n\t(No symbol) [0x0x7ff6f15295d1]\n\t(No symbol) [0x0x7ff6f152a3f3]\n\tGetHandleVerifier [0x0x7ff6f1a1dc7d+2960429]\n\tGetHandleVerifier [0x0x7ff6f1a17f3a+2936554]\n\tGetHandleVerifier [0x0x7ff6f1a38977+3070247]\n\tGetHandleVerifier [0x0x7ff6f17783ce+185214]\n\tGetHandleVerifier [0x0x7ff6f177fe1f+216527]\n\tGetHandleVerifier [0x0x7ff6f1767b24+117460]\n\tGetHandleVerifier [0x0x7ff6f1767cdf+117903]\n\tGetHandleVerifier [0x0x7ff6f174dbb8+11112]\n\tBaseThreadInitThunk [0x0x7ffe3691e8d7+23]\n\tRtlUserThreadStart [0x0x7ffe3754c53c+44]","statusTrace":"browser_name = 'chrome'\n\n    @pytest.mark.parametrize(\"browser_name\", [\"chrome\", \"edge\"])\n    def test_file_upload(browser_name):\n        # Get driver for the current browser\n        driver = DriverFactory.get_driver(browser_name=browser_name, headless=False)\n    \n        # Initialize page object\n        page = DemoQAFileUpload(driver)\n>       page.open_url(\"https://demoqa.com/upload-download\")\n\ntests\\test_file_upload.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\demoqa_file_upload.py:12: in open_url\n    self.driver.maximize_window()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:650: in maximize_window\n    self.execute(command, None)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025C6C532C90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...ff6f174dbb8+11112]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe3691e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe3754c53c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=141.0.7390.108)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6f175e8e5+80021]\nE       \tGetHandleVerifier [0x0x7ff6f175e940+80112]\nE       \t(No symbol) [0x0x7ff6f14e060f]\nE       \t(No symbol) [0x0x7ff6f14b82f1]\nE       \t(No symbol) [0x0x7ff6f15688be]\nE       \t(No symbol) [0x0x7ff6f1588fa2]\nE       \t(No symbol) [0x0x7ff6f1561003]\nE       \t(No symbol) [0x0x7ff6f15295d1]\nE       \t(No symbol) [0x0x7ff6f152a3f3]\nE       \tGetHandleVerifier [0x0x7ff6f1a1dc7d+2960429]\nE       \tGetHandleVerifier [0x0x7ff6f1a17f3a+2936554]\nE       \tGetHandleVerifier [0x0x7ff6f1a38977+3070247]\nE       \tGetHandleVerifier [0x0x7ff6f17783ce+185214]\nE       \tGetHandleVerifier [0x0x7ff6f177fe1f+216527]\nE       \tGetHandleVerifier [0x0x7ff6f1767b24+117460]\nE       \tGetHandleVerifier [0x0x7ff6f1767cdf+117903]\nE       \tGetHandleVerifier [0x0x7ff6f174dbb8+11112]\nE       \tBaseThreadInitThunk [0x0x7ffe3691e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffe3754c53c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_file_upload"},{"name":"host","value":"ASCENDI-1GUJSNA"},{"name":"thread","value":"15648-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_file_upload"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"303e050ab52dded5.json","parameterValues":["'chrome'"]}